apiVersion: fn.kpt.dev/v1alpha1
kind: StarlarkRun
metadata:
  name: network-run
params:
  app: echo-server-insecure # use this to search/create resource names, eg test-app-cert, test-app-ingress
  hosts: # these are to be '||' in route matching rules
  # create a single cert with this domain
  - domain1.test.com
  - domain2.test.com
  routes:
  - match: Path(`/somepath2`) # [3] && (Host(`domain1.test.com``) || Host(`domain2.test.com`)) 
    priority: 10 # [4]
    middlewares: # [5]
    - name: middleware1 # [6]
      namespace: default # [7]
    services: # [8]
    # - kind: Service - this is boilerplate, our function can add
    - name: foo
      namespace: default
      passHostHeader: true
      port: 80 # [9]
      responseForwarding:
        flushInterval: 1ms
      scheme: https
      serversTransport: transport # [10]
      sticky:
        cookie:
          httpOnly: true
          name: cookie
          secure: true
          sameSite: none
      strategy: RoundRobin
      weight: 10
source: "def ensure_inject_network_parameters(r, inputRoutes, inputHosts, appName):\n\n  hostExp = \"\"\n  for host in inputHosts:\n      hostExp = hostExp + \"Host(`{}`) || \".format(host)\n  \n  if hostExp.endswith(\" || \"):\n    hostExp = hostExp[:-len(\" || \")]\n\n  if r[\"apiVersion\"] == \"traefik.containo.us/v1alpha1\" and r[\"kind\"] == \"IngressRoute\" and r[\"metadata\"][\"name\"] == appName:\n      routes = r[\"spec\"][\"routes\"]\n      for inputRoute in inputRoutes:\n          matchExp = hostExp + \" && \" + inputRoute[\"match\"]\n\n          for route in routes:\n            if matchExp == route[\"match\"]:\n              return\n          nextRoute = inputRoute\n          nextRoute[\"match\"] = matchExp\n          routes.append(nextRoute)\n      \n      tls = r[\"spec\"][\"tls\"]\n      tls[\"secretName\"] = appName + \"-cert\"\n\ninputParams = ctx.resource_list[\"functionConfig\"][\"params\"]\ninputRoutes = inputParams[\"routes\"]\ninputHosts = inputParams[\"hosts\"]\nappName = inputParams[\"app\"]\n\nfor resource in ctx.resource_list[\"items\"]:\n  ensure_inject_network_parameters(resource, inputRoutes, inputHosts, appName)\n"
